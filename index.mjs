// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-property@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-probability@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-entropy@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-kurtosis@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-mean@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-mode@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-median@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-skewness@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-stdev@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-variance@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-cdf@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-mgf@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-pmf@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-quantile@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var c=t,v=s,g=e,y=i.isPrimitive,x=n,w=r,k=o,q=d,E=p,M=m,T=l,V=a,P=u,z=b,A=h,B=j,C=f;function D(){var t;if(!(this instanceof D))return 0===arguments.length?new D:new D(arguments[0]);if(arguments.length){if(!y(t=arguments[0]))throw new TypeError(C("invalid argument. Mean parameter `p` must be a probability. Value: `%s`.",t))}else t=.5;return c(this,"p",{configurable:!1,enumerable:!0,get:function(){return t},set:function(s){if(!y(s))throw new TypeError(C("invalid value. Must be a probability. Value: `%s`.",s));t=s}}),this}g(D.prototype,"entropy",(function(){return x(this.p)})),g(D.prototype,"kurtosis",(function(){return w(this.p)})),g(D.prototype,"mean",(function(){return k(this.p)})),g(D.prototype,"median",(function(){return E(this.p)})),g(D.prototype,"mode",(function(){return q(this.p)})),g(D.prototype,"skewness",(function(){return M(this.p)})),g(D.prototype,"stdev",(function(){return T(this.p)})),g(D.prototype,"variance",(function(){return V(this.p)})),v(D.prototype,"cdf",(function(t){return P(t,this.p)})),v(D.prototype,"mgf",(function(t){return z(t,this.p)})),v(D.prototype,"pmf",(function(t){return A(t,this.p)})),v(D.prototype,"quantile",(function(t){return B(t,this.p)}));var F=D;export{F as default};
//# sourceMappingURL=index.mjs.map
