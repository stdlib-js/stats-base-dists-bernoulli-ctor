{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property';\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor';\nimport { isPrimitive as isProbability } from '@stdlib/assert-is-probability';\nimport entropy from '@stdlib/stats-base-dists-bernoulli-entropy';\nimport kurtosis from '@stdlib/stats-base-dists-bernoulli-kurtosis';\nimport mean from '@stdlib/stats-base-dists-bernoulli-mean';\nimport mode from '@stdlib/stats-base-dists-bernoulli-mode';\nimport median from '@stdlib/stats-base-dists-bernoulli-median';\nimport skewness from '@stdlib/stats-base-dists-bernoulli-skewness';\nimport stdev from '@stdlib/stats-base-dists-bernoulli-stdev';\nimport variance from '@stdlib/stats-base-dists-bernoulli-variance';\nimport cdf from '@stdlib/stats-base-dists-bernoulli-cdf';\nimport mgf from '@stdlib/stats-base-dists-bernoulli-mgf';\nimport pmf from '@stdlib/stats-base-dists-bernoulli-pmf';\nimport quantile from '@stdlib/stats-base-dists-bernoulli-quantile';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated CDF\n*/\nfunction bernoulliCDF( x ) {\n\treturn cdf( x, this.p );\n}\n\n/**\n* Evaluates the moment-generating function (MGF).\n*\n* @private\n* @param {number} t - input value\n* @returns {number} evaluated MGF\n*/\nfunction bernoulliMGF( t ) {\n\treturn mgf( t, this.p );\n}\n\n/**\n* Evaluates the probability mass function (PMF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated PMF\n*/\nfunction bernoulliPMF( x ) {\n\treturn pmf( x, this.p );\n}\n\n/**\n* Evaluates the quantile function.\n*\n* @private\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n*/\nfunction bernoulliQuantile( p ) {\n\treturn quantile( p, this.p );\n}\n\n\n// MAIN //\n\n/**\n* Bernoulli distribution constructor.\n*\n* @constructor\n* @param {Probability} [p=0.5] - success probability\n* @throws {TypeError} `p` must be a probability\n* @returns {Bernoulli} distribution instance\n*\n* @example\n* var bernoulli = new Bernoulli();\n*\n* var y = bernoulli.cdf( 1.8 );\n* // returns 1.0\n*\n* var v = bernoulli.median;\n* // returns 0.0\n*/\nfunction Bernoulli() {\n\tvar p;\n\tif ( !(this instanceof Bernoulli) ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn new Bernoulli();\n\t\t}\n\t\treturn new Bernoulli( arguments[ 0 ] );\n\t}\n\tif ( arguments.length ) {\n\t\tp = arguments[ 0 ];\n\t\tif ( !isProbability( p ) ) {\n\t\t\tthrow new TypeError( format( '0uVDY', p ) );\n\t\t}\n\t} else {\n\t\tp = 0.5;\n\t}\n\tdefineProperty( this, 'p', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn p;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isProbability( value ) ) {\n\t\t\t\tthrow new TypeError( format( '0uV8h', value ) );\n\t\t\t}\n\t\t\tp = value;\n\t\t}\n\t});\n\treturn this;\n}\n\n/**\n* Bernoulli distribution differential entropy.\n*\n* @name entropy\n* @memberof Bernoulli.prototype\n* @type {number}\n* @see [differential entropy]{@link https://en.wikipedia.org/wiki/Entropy_%28information_theory%29}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.4 );\n*\n* var v = bernoulli.entropy;\n* // returns ~0.673\n*/\nsetReadOnlyAccessor( Bernoulli.prototype, 'entropy', function get() {\n\treturn entropy( this.p );\n});\n\n/**\n* Bernoulli distribution excess kurtosis.\n*\n* @name kurtosis\n* @memberof Bernoulli.prototype\n* @type {number}\n* @see [kurtosis]{@link https://en.wikipedia.org/wiki/Kurtosis}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.4 );\n*\n* var v = bernoulli.kurtosis;\n* // returns ~-1.833\n*/\nsetReadOnlyAccessor( Bernoulli.prototype, 'kurtosis', function get() {\n\treturn kurtosis( this.p );\n});\n\n/**\n* Bernoulli distribution expected value.\n*\n* @name mean\n* @memberof Bernoulli.prototype\n* @type {number}\n* @see [expected value]{@link https://en.wikipedia.org/wiki/Expected_value}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.4 );\n*\n* var v = bernoulli.mean;\n* // returns 0.4\n*/\nsetReadOnlyAccessor( Bernoulli.prototype, 'mean', function get() {\n\treturn mean( this.p );\n});\n\n/**\n* Bernoulli distribution median.\n*\n* @name median\n* @memberof Bernoulli.prototype\n* @type {number}\n* @see [median]{@link https://en.wikipedia.org/wiki/Median}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.4 );\n*\n* var v = bernoulli.median;\n* // returns 0.0\n*/\nsetReadOnlyAccessor( Bernoulli.prototype, 'median', function get() {\n\treturn median( this.p );\n});\n\n/**\n* Bernoulli distribution mode.\n*\n* @name mode\n* @memberof Bernoulli.prototype\n* @type {number}\n* @see [mode]{@link https://en.wikipedia.org/wiki/Mode_%28statistics%29}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.4 );\n*\n* var v = bernoulli.mode;\n* // returns 0.0\n*/\nsetReadOnlyAccessor( Bernoulli.prototype, 'mode', function get() {\n\treturn mode( this.p );\n});\n\n/**\n* Bernoulli distribution skewness.\n*\n* @name skewness\n* @memberof Bernoulli.prototype\n* @type {number}\n* @see [skewness]{@link https://en.wikipedia.org/wiki/Skewness}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.4 );\n*\n* var v = bernoulli.skewness;\n* // returns ~0.408\n*/\nsetReadOnlyAccessor( Bernoulli.prototype, 'skewness', function get() {\n\treturn skewness( this.p );\n});\n\n/**\n* Bernoulli distribution standard deviation.\n*\n* @name stdev\n* @memberof Bernoulli.prototype\n* @type {PositiveNumber}\n* @see [standard deviation]{@link https://en.wikipedia.org/wiki/Standard_deviation}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.4 );\n*\n* var v = bernoulli.stdev;\n* // returns ~0.49\n*/\nsetReadOnlyAccessor( Bernoulli.prototype, 'stdev', function get() {\n\treturn stdev( this.p );\n});\n\n/**\n* Bernoulli distribution variance.\n*\n* @name variance\n* @memberof Bernoulli.prototype\n* @type {PositiveNumber}\n* @see [variance]{@link https://en.wikipedia.org/wiki/Variance}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.4 );\n*\n* var v = bernoulli.variance;\n* // returns 0.24\n*/\nsetReadOnlyAccessor( Bernoulli.prototype, 'variance', function get() {\n\treturn variance( this.p );\n});\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @name cdf\n* @memberof Bernoulli.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated CDF\n* @see [cdf]{@link https://en.wikipedia.org/wiki/Cumulative_distribution_function}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.2 );\n*\n* var v = bernoulli.cdf( 1.5 );\n* // returns 1.0\n*/\nsetReadOnly( Bernoulli.prototype, 'cdf', bernoulliCDF );\n\n/**\n* Evaluates the moment-generating function (MGF).\n*\n* @name mgf\n* @memberof Bernoulli.prototype\n* @type {Function}\n* @param {number} t - input value\n* @returns {number} evaluated MGF\n* @see [mgf]{@link https://en.wikipedia.org/wiki/Moment-generating_function}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.2 );\n*\n* var v = bernoulli.mgf( -3.0 );\n* // returns ~0.81\n*/\nsetReadOnly( Bernoulli.prototype, 'mgf', bernoulliMGF );\n\n/**\n* Evaluates the probability mass function (PMF).\n*\n* @name pmf\n* @memberof Bernoulli.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated PMF\n* @see [pmf]{@link https://en.wikipedia.org/wiki/Probability_mass_function}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.2 );\n*\n* var v = bernoulli.pmf( 1.0 );\n* // returns 0.2\n*\n* v = bernoulli.pmf( 0.0 );\n* // returns 0.8\n*/\nsetReadOnly( Bernoulli.prototype, 'pmf', bernoulliPMF );\n\n/**\n* Evaluates the quantile function.\n*\n* @name quantile\n* @memberof Bernoulli.prototype\n* @type {Function}\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n* @see [quantile function]{@link https://en.wikipedia.org/wiki/Quantile_function}\n*\n* @example\n* var bernoulli = new Bernoulli( 0.2 );\n*\n* var v = bernoulli.quantile( 0.9 );\n* // returns 1\n*/\nsetReadOnly( Bernoulli.prototype, 'quantile', bernoulliQuantile );\n\n\n// EXPORTS //\n\nexport default Bernoulli;\n"],"names":["Bernoulli","p","this","arguments","length","isProbability","TypeError","format","defineProperty","configurable","enumerable","get","set","value","setReadOnlyAccessor","prototype","entropy","kurtosis","mean","median","mode","skewness","stdev","variance","setReadOnly","x","cdf","t","mgf","pmf","quantile"],"mappings":";;2yDA6GA,SAASA,IACR,IAAIC,EACJ,KAAOC,gBAAgBF,GACtB,OAA0B,IAArBG,UAAUC,OACP,IAAIJ,EAEL,IAAIA,EAAWG,UAAW,IAElC,GAAKA,UAAUC,QAEd,IAAMC,EADNJ,EAAIE,UAAW,IAEd,MAAM,IAAIG,UAAWC,EAAQ,QAASN,SAGvCA,EAAI,GAeL,OAbAO,EAAgBN,KAAM,IAAK,CAC1BO,cAAgB,EAChBC,YAAc,EACdC,IAAO,WACN,OAAOV,CACP,EACDW,IAAO,SAAcC,GACpB,IAAMR,EAAeQ,GACpB,MAAM,IAAIP,UAAWC,EAAQ,QAASM,IAEvCZ,EAAIY,CACJ,IAEKX,IACR,CAgBAY,EAAqBd,EAAUe,UAAW,WAAW,WACpD,OAAOC,EAASd,KAAKD,EACtB,IAgBAa,EAAqBd,EAAUe,UAAW,YAAY,WACrD,OAAOE,EAAUf,KAAKD,EACvB,IAgBAa,EAAqBd,EAAUe,UAAW,QAAQ,WACjD,OAAOG,EAAMhB,KAAKD,EACnB,IAgBAa,EAAqBd,EAAUe,UAAW,UAAU,WACnD,OAAOI,EAAQjB,KAAKD,EACrB,IAgBAa,EAAqBd,EAAUe,UAAW,QAAQ,WACjD,OAAOK,EAAMlB,KAAKD,EACnB,IAgBAa,EAAqBd,EAAUe,UAAW,YAAY,WACrD,OAAOM,EAAUnB,KAAKD,EACvB,IAgBAa,EAAqBd,EAAUe,UAAW,SAAS,WAClD,OAAOO,EAAOpB,KAAKD,EACpB,IAgBAa,EAAqBd,EAAUe,UAAW,YAAY,WACrD,OAAOQ,EAAUrB,KAAKD,EACvB,IAkBAuB,EAAaxB,EAAUe,UAAW,OAzPlC,SAAuBU,GACtB,OAAOC,EAAKD,EAAGvB,KAAKD,EACrB,IAyQAuB,EAAaxB,EAAUe,UAAW,OAhQlC,SAAuBY,GACtB,OAAOC,EAAKD,EAAGzB,KAAKD,EACrB,IAmRAuB,EAAaxB,EAAUe,UAAW,OA1QlC,SAAuBU,GACtB,OAAOI,EAAKJ,EAAGvB,KAAKD,EACrB,IA0RAuB,EAAaxB,EAAUe,UAAW,YAjRlC,SAA4Bd,GAC3B,OAAO6B,EAAU7B,EAAGC,KAAKD,EAC1B"}